{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "marquee",
          "type": "string"
        }
      ],
      "name": "SetMarquee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMarquee",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxLenMarquee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newMarquee",
          "type": "string"
        }
      ],
      "name": "setMarquee",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMaxLenMarquee",
          "type": "uint256"
        }
      ],
      "name": "updateMaxLenMarquee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMinValue",
          "type": "uint256"
        }
      ],
      "name": "updateMinValue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "updatePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "withdrawTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100e1565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100df576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6080516117576101186000396000818161039d015281816103e6015281816104a9015281816104e9015261057c01526117576000f3fe6080604052600436106101355760003560e01c80635c975abb116100ab5780638456cb591161006f5780638456cb59146102de5780638d6cc56d146102f35780638da5cb5b14610313578063963e63c71461033b57806398d5fdca14610351578063f2fde38b1461036657600080fd5b80635c975abb1461024f5780636cc728db14610272578063715018a61461029457806372b0d90c146102a95780638129fc1c146102c957600080fd5b80633f4ba83a116100fd5780633f4ba83a146101c95780634f1ef286146101de57806352d1902d146101f157806354fd4d501461020657806355b64f201461021c57806358f6c2311461022f57600080fd5b806311bb3bb41461013a57806312065fe01461015c5780633544b52b1461017e5780633659cfe6146101945780633ccfd60b146101b4575b600080fd5b34801561014657600080fd5b5061015a610155366004611218565b610386565b005b34801561016857600080fd5b50475b6040519081526020015b60405180910390f35b34801561018a57600080fd5b5061016b60fe5481565b3480156101a057600080fd5b5061015a6101af366004611246565b610393565b3480156101c057600080fd5b5061015a61047b565b3480156101d557600080fd5b5061015a61048d565b61015a6101ec3660046112f6565b61049f565b3480156101fd57600080fd5b5061016b61056f565b34801561021257600080fd5b5061016b60fb5481565b61015a61022a36600461135a565b610622565b34801561023b57600080fd5b5061015a61024a366004611218565b6107df565b34801561025b57600080fd5b5060335460ff166040519015158152602001610175565b34801561027e57600080fd5b506102876107ec565b60405161017591906113f3565b3480156102a057600080fd5b5061015a610886565b3480156102b557600080fd5b5061015a6102c4366004611246565b610898565b3480156102d557600080fd5b5061015a6109a3565b3480156102ea57600080fd5b5061015a610b03565b3480156102ff57600080fd5b5061015a61030e366004611218565b610b13565b34801561031f57600080fd5b506065546040516001600160a01b039091168152602001610175565b34801561034757600080fd5b5061016b60fc5481565b34801561035d57600080fd5b5060fd5461016b565b34801561037257600080fd5b5061015a610381366004611246565b610b20565b61038e610b96565b60fe55565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036103e45760405162461bcd60e51b81526004016103db90611406565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661042d6000805160206116db833981519152546001600160a01b031690565b6001600160a01b0316146104535760405162461bcd60e51b81526004016103db90611452565b61045c81610bf0565b6040805160008082526020820190925261047891839190610bf8565b50565b610483610b96565b3361047881610898565b610495610b96565b61049d610d68565b565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036104e75760405162461bcd60e51b81526004016103db90611406565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166105306000805160206116db833981519152546001600160a01b031690565b6001600160a01b0316146105565760405162461bcd60e51b81526004016103db90611452565b61055f82610bf0565b61056b82826001610bf8565b5050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461060f5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016103db565b506000805160206116db83398151915290565b61062a610dba565b600061063560fd5490565b9050803410156106875760405162461bcd60e51b815260206004820152601b60248201527f5b4d30315d20596f75206469646e27742070617920656e6f756768000000000060448201526064016103db565b60006106978360fe549051111590565b9050806107945760fc5460009033906106b0908561149e565b604051600081818185875af1925050503d80600081146106ec576040519150601f19603f3d011682016040523d82523d6000602084013e6106f1565b606091505b50509050806107425760405162461bcd60e51b815260206004820152601f60248201527f5b4d30325d204661696c656420746f2073656e642076616c7565206261636b0060448201526064016103db565b60405162461bcd60e51b815260206004820152602160248201527f5b4d30335d20596f7572206d657373616765206973206e6f7420616c6c6f77656044820152601960fa1b60648201526084016103db565b60ff6107a08482611547565b507f1e946919e9e9cfdbd2d6ed88c52f8e3410b63fd8ee93b3fbc70a1eb1e51819e433846040516107d2929190611607565b60405180910390a1505050565b6107e7610b96565b60fc55565b60606107f6610dba565b60ff8054610803906114bf565b80601f016020809104026020016040519081016040528092919081815260200182805461082f906114bf565b801561087c5780601f106108515761010080835404028352916020019161087c565b820191906000526020600020905b81548152906001019060200180831161085f57829003601f168201915b5050505050905090565b61088e610b96565b61049d6000610e00565b6108a0610b96565b6001600160a01b0381166109045760405162461bcd60e51b815260206004820152602560248201527f5b4d30345d2043616e6e6f7420776974686472617720746f207a65726f206164604482015264647265737360d81b60648201526084016103db565b60006001600160a01b03821647604051600081818185875af1925050503d806000811461094d576040519150601f19603f3d011682016040523d82523d6000602084013e610952565b606091505b505090508061056b5760405162461bcd60e51b815260206004820152601e60248201527f5b4d30355d204661696c656420746f207769746864726177204574686572000060448201526064016103db565b600054610100900460ff16158080156109c35750600054600160ff909116105b806109dd5750303b1580156109dd575060005460ff166001145b610a405760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103db565b6000805460ff191660011790558015610a63576000805461ff0019166101001790555b610a6b610e52565b610a73610e81565b610a7b610eb0565b600160fb55600060fc5566038d7ea4c6800060fd556040805160608101909152602f8082526116ac602083013960ff90610ab59082611547565b5060c860fe558015610478576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b610b0b610b96565b61049d610ed7565b610b1b610b96565b60fd55565b610b28610b96565b6001600160a01b038116610b8d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103db565b61047881610e00565b6065546001600160a01b0316331461049d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103db565b610478610b96565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610c3057610c2b83610f14565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610c8a575060408051601f3d908101601f19168201909252610c879181019061162b565b60015b610ced5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016103db565b6000805160206116db8339815191528114610d5c5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016103db565b50610c2b838383610fb0565b610d70610fdb565b6033805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60335460ff161561049d5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016103db565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610e795760405162461bcd60e51b81526004016103db90611644565b61049d611024565b600054610100900460ff16610ea85760405162461bcd60e51b81526004016103db90611644565b61049d611057565b600054610100900460ff1661049d5760405162461bcd60e51b81526004016103db90611644565b610edf610dba565b6033805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610d9d3390565b6001600160a01b0381163b610f815760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016103db565b6000805160206116db83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b610fb983611087565b600082511180610fc65750805b15610c2b57610fd583836110c7565b50505050565b60335460ff1661049d5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016103db565b600054610100900460ff1661104b5760405162461bcd60e51b81526004016103db90611644565b6033805460ff19169055565b600054610100900460ff1661107e5760405162461bcd60e51b81526004016103db90611644565b61049d33610e00565b61109081610f14565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606110ec83836040518060600160405280602781526020016116fb602791396110f5565b90505b92915050565b6060600080856001600160a01b031685604051611112919061168f565b600060405180830381855af49150503d806000811461114d576040519150601f19603f3d011682016040523d82523d6000602084013e611152565b606091505b50915091506111638683838761116d565b9695505050505050565b606083156111dc5782516000036111d5576001600160a01b0385163b6111d55760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103db565b50816111e6565b6111e683836111ee565b949350505050565b8151156111fe5781518083602001fd5b8060405162461bcd60e51b81526004016103db91906113f3565b60006020828403121561122a57600080fd5b5035919050565b6001600160a01b038116811461047857600080fd5b60006020828403121561125857600080fd5b813561126381611231565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561129b5761129b61126a565b604051601f8501601f19908116603f011681019082821181831017156112c3576112c361126a565b816040528093508581528686860111156112dc57600080fd5b858560208301376000602087830101525050509392505050565b6000806040838503121561130957600080fd5b823561131481611231565b9150602083013567ffffffffffffffff81111561133057600080fd5b8301601f8101851361134157600080fd5b61135085823560208401611280565b9150509250929050565b60006020828403121561136c57600080fd5b813567ffffffffffffffff81111561138357600080fd5b8201601f8101841361139457600080fd5b6111e684823560208401611280565b60005b838110156113be5781810151838201526020016113a6565b50506000910152565b600081518084526113df8160208601602086016113a3565b601f01601f19169290920160200192915050565b6020815260006110ec60208301846113c7565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b818103818111156110ef57634e487b7160e01b600052601160045260246000fd5b600181811c908216806114d357607f821691505b6020821081036114f357634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610c2b57600081815260208120601f850160051c810160208610156115205750805b601f850160051c820191505b8181101561153f5782815560010161152c565b505050505050565b815167ffffffffffffffff8111156115615761156161126a565b6115758161156f84546114bf565b846114f9565b602080601f8311600181146115aa57600084156115925750858301515b600019600386901b1c1916600185901b17855561153f565b600085815260208120601f198616915b828110156115d9578886015182559484019460019091019084016115ba565b50858210156115f75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b03831681526040602082018190526000906111e6908301846113c7565b60006020828403121561163d57600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600082516116a18184602087016113a3565b919091019291505056fe666f7220746865206c6f7665206f66207361746f73686920706c65617365206a75737420776f726b2064616d6d6974360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220e93adbd22b040351c75897c7c0a1e1216a1d0fd9d5d7d5b6e094899c8c20748164736f6c63430008130033",
    "sourceMap": "405:5092:40:-:0;;;1332:4:25;1289:48;;897:53:40;;;;;;;;;-1:-1:-1;921:22:40;:20;:22::i;:::-;405:5092;;5939:280:24;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:24;;216:2:42;5998:66:24;;;198:21:42;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:42;;;338:37;392:19;;5998:66:24;;;;;;;;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:24;6140:15;6125:30;;;;;;6174:28;;564:36:42;;;6174:28:24;;552:2:42;537:18;6174:28:24;;;;;;;6074:139;5939:280::o;422:184:42:-;405:5092:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "405:5092:40:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4530:123;;;;;;;;;;-1:-1:-1;4530:123:40;;;;;:::i;:::-;;:::i;:::-;;3015:97;;;;;;;;;;-1:-1:-1;3084:21:40;3015:97;;;345:25:42;;;333:2;318:18;3015:97:40;;;;;;;;678:28;;;;;;;;;;;;;;;;3387:195:25;;;;;;;;;;-1:-1:-1;3387:195:25;;;;;:::i;:::-;;:::i;3654:118:40:-;;;;;;;;;;;;;:::i;5225:63::-;;;;;;;;;;;;;:::i;3901:220:25:-;;;;;;:::i;:::-;;:::i;3006:131::-;;;;;;;;;;;;;:::i;503:22:40:-;;;;;;;;;;;;;;;;1683:567;;;;;;:::i;:::-;;:::i;4227:103::-;;;;;;;;;;-1:-1:-1;4227:103:40;;;;;:::i;:::-;;:::i;1858:84:26:-;;;;;;;;;;-1:-1:-1;1928:7:26;;;;1858:84;;2928:14:42;;2921:22;2903:41;;2891:2;2876:18;1858:84:26;2763:187:42;2414:103:40;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2064:101:19:-;;;;;;;;;;;;;:::i;3311:254:40:-;;;;;;;;;;-1:-1:-1;3311:254:40;;;;;:::i;:::-;;:::i;1030:339::-;;;;;;;;;;;;;:::i;5056:59::-;;;;;;;;;;;;;:::i;3947:91::-;;;;;;;;;;-1:-1:-1;3947:91:40;;;;;:::i;:::-;;:::i;1441:85:19:-;;;;;;;;;;-1:-1:-1;1513:6:19;;1441:85;;-1:-1:-1;;;;;1513:6:19;;;4117:51:42;;4105:2;4090:18;1441:85:19;3971:203:42;552:23:40;;;;;;;;;;;;;;;;5416:79;;;;;;;;;;-1:-1:-1;5483:5:40;;5416:79;;2314:198:19;;;;;;;;;;-1:-1:-1;2314:198:19;;;;;:::i;:::-;;:::i;4530:123:40:-;1334:13:19;:11;:13::i;:::-;4614::40::1;:32:::0;4530:123::o;3387:195:25:-;-1:-1:-1;;;;;1898:6:25;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:25;;;;;;;:::i;:::-;;;;;;;;;1995:6;-1:-1:-1;;;;;1971:30:25;:20;-1:-1:-1;;;;;;;;;;;1536:65:22;-1:-1:-1;;;;;1536:65:22;;1457:151;1971:20:25;-1:-1:-1;;;;;1971:30:25;;1963:87;;;;-1:-1:-1;;;1963:87:25;;;;;;;:::i;:::-;3468:36:::1;3486:17;3468;:36::i;:::-;3555:12;::::0;;3565:1:::1;3555:12:::0;;;::::1;::::0;::::1;::::0;;;3514:61:::1;::::0;3536:17;;3555:12;3514:21:::1;:61::i;:::-;3387:195:::0;:::o;3654:118:40:-;1334:13:19;:11;:13::i;:::-;3730:10:40::1;3751:14;3730:10:::0;3751::::1;:14::i;5225:63::-:0;1334:13:19;:11;:13::i;:::-;5271:10:40::1;:8;:10::i;:::-;5225:63::o:0;3901:220:25:-;-1:-1:-1;;;;;1898:6:25;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:25;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:25;:20;-1:-1:-1;;;;;;;;;;;1536:65:22;-1:-1:-1;;;;;1536:65:22;;1457:151;1971:20:25;-1:-1:-1;;;;;1971:30:25;;1963:87;;;;-1:-1:-1;;;1963:87:25;;;;;;;:::i;:::-;4016:36:::1;4034:17;4016;:36::i;:::-;4062:52;4084:17;4103:4;4109;4062:21;:52::i;:::-;3901:220:::0;;:::o;3006:131::-;3084:7;2324:4;-1:-1:-1;;;;;2333:6:25;2316:23;;2308:92;;;;-1:-1:-1;;;2308:92:25;;5207:2:42;2308:92:25;;;5189:21:42;5246:2;5226:18;;;5219:30;5285:34;5265:18;;;5258:62;5356:26;5336:18;;;5329:54;5400:19;;2308:92:25;5005:420:42;2308:92:25;-1:-1:-1;;;;;;;;;;;;3006:131:25;:::o;1683:567:40:-;1482:19:26;:17;:19::i;:::-;1770:20:40::1;1793:10;5483:5:::0;;;5416:79;1793:10:::1;1770:33;;1834:12;1821:9;:25;;1813:65;;;::::0;-1:-1:-1;;;1813:65:40;;5632:2:42;1813:65:40::1;::::0;::::1;5614:21:42::0;5671:2;5651:18;;;5644:30;5710:29;5690:18;;;5683:57;5757:18;;1813:65:40::1;5430:351:42::0;1813:65:40::1;1889:12;1904:26;1919:10;2877:13:::0;;2849:24;;:41;;;2753:144;1904:26:::1;1889:41;;1945:7;1940:224;;2021:8;::::0;1969:9:::1;::::0;1983:10:::1;::::0;2006:23:::1;::::0;:12;:23:::1;:::i;:::-;1983:51;::::0;::::1;::::0;;;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1968:66;;;2056:4;2048:48;;;::::0;-1:-1:-1;;;2048:48:40;;6428:2:42;2048:48:40::1;::::0;::::1;6410:21:42::0;6467:2;6447:18;;;6440:30;6506:33;6486:18;;;6479:61;6557:18;;2048:48:40::1;6226:355:42::0;2048:48:40::1;2110:43;::::0;-1:-1:-1;;;2110:43:40;;6788:2:42;2110:43:40::1;::::0;::::1;6770:21:42::0;6827:2;6807:18;;;6800:30;6866:34;6846:18;;;6839:62;-1:-1:-1;;;6917:18:42;;;6910:31;6958:19;;2110:43:40::1;6586:397:42::0;1940:224:40::1;2174:7;:20;2184:10:::0;2174:7;:20:::1;:::i;:::-;;2209:34;2220:10;2232;2209:34;;;;;;;:::i;:::-;;;;;;;;1760:490;;1683:567:::0;:::o;4227:103::-;1334:13:19;:11;:13::i;:::-;4301:8:40::1;:22:::0;4227:103::o;2414:::-;2471:13;1482:19:26;:17;:19::i;:::-;2503:7:40::1;2496:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2414:103:::0;:::o;2064:101:19:-;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;3311:254:40:-:0;1334:13:19;:11;:13::i;:::-;-1:-1:-1;;;;;3386:16:40;::::1;3378:66;;;::::0;-1:-1:-1;;;3378:66:40;;10101:2:42;3378:66:40::1;::::0;::::1;10083:21:42::0;10140:2;10120:18;;;10113:30;10179:34;10159:18;;;10152:62;-1:-1:-1;;;10230:18:42;;;10223:35;10275:19;;3378:66:40::1;9899:401:42::0;3378:66:40::1;3455:9;-1:-1:-1::0;;;;;3469:7:40;::::1;3084:21:::0;3469:32:::1;::::0;::::1;::::0;;;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3454:47;;;3519:4;3511:47;;;::::0;-1:-1:-1;;;3511:47:40;;10507:2:42;3511:47:40::1;::::0;::::1;10489:21:42::0;10546:2;10526:18;;;10519:30;10585:32;10565:18;;;10558:60;10635:18;;3511:47:40::1;10305:354:42::0;1030:339:40;3279:19:24;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:24;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:24;1713:19:27;:23;;;3387:66:24;;-1:-1:-1;3436:12:24;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:24;;10866:2:42;3325:201:24;;;10848:21:42;10905:2;10885:18;;;10878:30;10944:34;10924:18;;;10917:62;-1:-1:-1;;;10995:18:42;;;10988:44;11049:19;;3325:201:24;10664:410:42;3325:201:24;3536:12;:16;;-1:-1:-1;;3536:16:24;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:24;;;;;3562:65;1081:17:40::1;:15;:17::i;:::-;1108:16;:14;:16::i;:::-;1134:24;:22;:24::i;:::-;1179:1;1169:7;:11:::0;1201:7:::1;1190:8;:18:::0;1226:11:::1;1218:5;:19:::0;1247:59:::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;::::1;;::::0;::::1;;:7;::::0;:59:::1;::::0;:7;:59:::1;:::i;:::-;-1:-1:-1::0;1359:3:40::1;1343:13;:19:::0;3647:99:24;;;;3697:5;3681:21;;-1:-1:-1;;3681:21:24;;;3721:14;;-1:-1:-1;11231:36:42;;3721:14:24;;11219:2:42;11204:18;3721:14:24;;;;;;;3269:483;1030:339:40:o;5056:59::-;1334:13:19;:11;:13::i;:::-;5100:8:40::1;:6;:8::i;3947:91::-:0;1334:13:19;:11;:13::i;:::-;4015:5:40::1;:16:::0;3947:91::o;2314:198:19:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2402:22:19;::::1;2394:73;;;::::0;-1:-1:-1;;;2394:73:19;;11480:2:42;2394:73:19::1;::::0;::::1;11462:21:42::0;11519:2;11499:18;;;11492:30;11558:34;11538:18;;;11531:62;-1:-1:-1;;;11609:18:42;;;11602:36;11655:19;;2394:73:19::1;11278:402:42::0;2394:73:19::1;2477:28;2496:8;2477:18;:28::i;1599:130::-:0;1513:6;;-1:-1:-1;;;;;1513:6:19;929:10:28;1662:23:19;1654:68;;;;-1:-1:-1;;;1654:68:19;;11887:2:42;1654:68:19;;;11869:21:42;;;11906:18;;;11899:30;11965:34;11945:18;;;11938:62;12017:18;;1654:68:19;11685:356:42;4856:92:40;1334:13:19;:11;:13::i;2820:944:22:-;971:66;3236:59;;;3232:526;;;3311:37;3330:17;3311:18;:37::i;:::-;2820:944;;;:::o;3232:526::-;3412:17;-1:-1:-1;;;;;3383:61:22;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3383:63:22;;;;;;;;-1:-1:-1;;3383:63:22;;;;;;;;;;;;:::i;:::-;;;3379:302;;3610:56;;-1:-1:-1;;;3610:56:22;;12437:2:42;3610:56:22;;;12419:21:42;12476:2;12456:18;;;12449:30;12515:34;12495:18;;;12488:62;-1:-1:-1;;;12566:18:42;;;12559:44;12620:19;;3610:56:22;12235:410:42;3379:302:22;-1:-1:-1;;;;;;;;;;;3496:28:22;;3488:82;;;;-1:-1:-1;;;3488:82:22;;12852:2:42;3488:82:22;;;12834:21:42;12891:2;12871:18;;;12864:30;12930:34;12910:18;;;12903:62;-1:-1:-1;;;12981:18:42;;;12974:39;13030:19;;3488:82:22;12650:405:42;3488:82:22;3447:138;3694:53;3712:17;3731:4;3737:9;3694:17;:53::i;2676:117:26:-;1729:16;:14;:16::i;:::-;2734:7:::1;:15:::0;;-1:-1:-1;;2734:15:26::1;::::0;;2764:22:::1;929:10:28::0;2773:12:26::1;2764:22;::::0;-1:-1:-1;;;;;4135:32:42;;;4117:51;;4105:2;4090:18;2764:22:26::1;;;;;;;2676:117::o:0;2010:106::-;1928:7;;;;2079:9;2071:38;;;;-1:-1:-1;;;2071:38:26;;13262:2:42;2071:38:26;;;13244:21:42;13301:2;13281:18;;;13274:30;-1:-1:-1;;;13320:18:42;;;13313:46;13376:18;;2071:38:26;13060:340:42;2666:187:19;2758:6;;;-1:-1:-1;;;;;2774:17:19;;;-1:-1:-1;;;;;;2774:17:19;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;2739:16;;2806:40;2729:124;2666:187;:::o;1063:97:26:-;5374:13:24;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:24;;;;;;;:::i;:::-;1126:27:26::1;:25;:27::i;1003:95:19:-:0;5374:13:24;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:24;;;;;;;:::i;:::-;1065:26:19::1;:24;:26::i;1042:67:25:-:0;5374:13:24;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:24;;;;;;;:::i;2429:115:26:-;1482:19;:17;:19::i;:::-;2488:7:::1;:14:::0;;-1:-1:-1;;2488:14:26::1;2498:4;2488:14;::::0;;2517:20:::1;2524:12;929:10:28::0;;850:96;1699:281:22;-1:-1:-1;;;;;1713:19:27;;;1772:106:22;;;;-1:-1:-1;;;1772:106:22;;14019:2:42;1772:106:22;;;14001:21:42;14058:2;14038:18;;;14031:30;14097:34;14077:18;;;14070:62;-1:-1:-1;;;14148:18:42;;;14141:43;14201:19;;1772:106:22;13817:409:42;1772:106:22;-1:-1:-1;;;;;;;;;;;1888:85:22;;-1:-1:-1;;;;;;1888:85:22;-1:-1:-1;;;;;1888:85:22;;;;;;;;;;1699:281::o;2372:276::-;2480:29;2491:17;2480:10;:29::i;:::-;2537:1;2523:4;:11;:15;:28;;;;2542:9;2523:28;2519:123;;;2567:64;2607:17;2626:4;2567:39;:64::i;:::-;;2372:276;;;:::o;2188:106:26:-;1928:7;;;;2246:41;;;;-1:-1:-1;;;2246:41:26;;14433:2:42;2246:41:26;;;14415:21:42;14472:2;14452:18;;;14445:30;-1:-1:-1;;;14491:18:42;;;14484:50;14551:18;;2246:41:26;14231:344:42;1166:95:26;5374:13:24;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:24;;;;;;;:::i;:::-;1239:7:26::1;:15:::0;;-1:-1:-1;;1239:15:26::1;::::0;;1166:95::o;1104:111:19:-;5374:13:24;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:24;;;;;;;:::i;:::-;1176:32:19::1;929:10:28::0;1176:18:19::1;:32::i;2086:152:22:-:0;2152:37;2171:17;2152:18;:37::i;:::-;2204:27;;-1:-1:-1;;;;;2204:27:22;;;;;;;;2086:152;:::o;6685:198:27:-;6768:12;6799:77;6820:6;6828:4;6799:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6792:84;;6685:198;;;;;:::o;7069:325::-;7210:12;7235;7249:23;7276:6;-1:-1:-1;;;;;7276:19:27;7296:4;7276:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7234:67;;;;7318:69;7345:6;7353:7;7362:10;7374:12;7318:26;:69::i;:::-;7311:76;7069:325;-1:-1:-1;;;;;;7069:325:27:o;7682:628::-;7862:12;7890:7;7886:418;;;7917:10;:17;7938:1;7917:22;7913:286;;-1:-1:-1;;;;;1713:19:27;;;8124:60;;;;-1:-1:-1;;;8124:60:27;;15074:2:42;8124:60:27;;;15056:21:42;15113:2;15093:18;;;15086:30;15152:31;15132:18;;;15125:59;15201:18;;8124:60:27;14872:353:42;8124:60:27;-1:-1:-1;8219:10:27;8212:17;;7886:418;8260:33;8268:10;8280:12;8260:7;:33::i;:::-;7682:628;;;;;;:::o;8832:540::-;8991:17;;:21;8987:379;;9219:10;9213:17;9275:15;9262:10;9258:2;9254:19;9247:44;8987:379;9342:12;9335:20;;-1:-1:-1;;;9335:20:27;;;;;;;;:::i;14:180:42:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:42;;14:180;-1:-1:-1;14:180:42:o;381:131::-;-1:-1:-1;;;;;456:31:42;;446:42;;436:70;;502:1;499;492:12;517:247;576:6;629:2;617:9;608:7;604:23;600:32;597:52;;;645:1;642;635:12;597:52;684:9;671:23;703:31;728:5;703:31;:::i;:::-;753:5;517:247;-1:-1:-1;;;517:247:42:o;769:127::-;830:10;825:3;821:20;818:1;811:31;861:4;858:1;851:15;885:4;882:1;875:15;901:631;965:5;995:18;1036:2;1028:6;1025:14;1022:40;;;1042:18;;:::i;:::-;1117:2;1111:9;1085:2;1171:15;;-1:-1:-1;;1167:24:42;;;1193:2;1163:33;1159:42;1147:55;;;1217:18;;;1237:22;;;1214:46;1211:72;;;1263:18;;:::i;:::-;1303:10;1299:2;1292:22;1332:6;1323:15;;1362:6;1354;1347:22;1402:3;1393:6;1388:3;1384:16;1381:25;1378:45;;;1419:1;1416;1409:12;1378:45;1469:6;1464:3;1457:4;1449:6;1445:17;1432:44;1524:1;1517:4;1508:6;1500;1496:19;1492:30;1485:41;;;;901:631;;;;;:::o;1537:584::-;1614:6;1622;1675:2;1663:9;1654:7;1650:23;1646:32;1643:52;;;1691:1;1688;1681:12;1643:52;1730:9;1717:23;1749:31;1774:5;1749:31;:::i;:::-;1799:5;-1:-1:-1;1855:2:42;1840:18;;1827:32;1882:18;1871:30;;1868:50;;;1914:1;1911;1904:12;1868:50;1937:22;;1990:4;1982:13;;1978:27;-1:-1:-1;1968:55:42;;2019:1;2016;2009:12;1968:55;2042:73;2107:7;2102:2;2089:16;2084:2;2080;2076:11;2042:73;:::i;:::-;2032:83;;;1537:584;;;;;:::o;2308:450::-;2377:6;2430:2;2418:9;2409:7;2405:23;2401:32;2398:52;;;2446:1;2443;2436:12;2398:52;2486:9;2473:23;2519:18;2511:6;2508:30;2505:50;;;2551:1;2548;2541:12;2505:50;2574:22;;2627:4;2619:13;;2615:27;-1:-1:-1;2605:55:42;;2656:1;2653;2646:12;2605:55;2679:73;2744:7;2739:2;2726:16;2721:2;2717;2713:11;2679:73;:::i;2955:250::-;3040:1;3050:113;3064:6;3061:1;3058:13;3050:113;;;3140:11;;;3134:18;3121:11;;;3114:39;3086:2;3079:10;3050:113;;;-1:-1:-1;;3197:1:42;3179:16;;3172:27;2955:250::o;3210:271::-;3252:3;3290:5;3284:12;3317:6;3312:3;3305:19;3333:76;3402:6;3395:4;3390:3;3386:14;3379:4;3372:5;3368:16;3333:76;:::i;:::-;3463:2;3442:15;-1:-1:-1;;3438:29:42;3429:39;;;;3470:4;3425:50;;3210:271;-1:-1:-1;;3210:271:42:o;3486:220::-;3635:2;3624:9;3617:21;3598:4;3655:45;3696:2;3685:9;3681:18;3673:6;3655:45;:::i;4179:408::-;4381:2;4363:21;;;4420:2;4400:18;;;4393:30;4459:34;4454:2;4439:18;;4432:62;-1:-1:-1;;;4525:2:42;4510:18;;4503:42;4577:3;4562:19;;4179:408::o;4592:::-;4794:2;4776:21;;;4833:2;4813:18;;;4806:30;4872:34;4867:2;4852:18;;4845:62;-1:-1:-1;;;4938:2:42;4923:18;;4916:42;4990:3;4975:19;;4592:408::o;5786:225::-;5853:9;;;5874:11;;;5871:134;;;5927:10;5922:3;5918:20;5915:1;5908:31;5962:4;5959:1;5952:15;5990:4;5987:1;5980:15;6988:380;7067:1;7063:12;;;;7110;;;7131:61;;7185:4;7177:6;7173:17;7163:27;;7131:61;7238:2;7230:6;7227:14;7207:18;7204:38;7201:161;;7284:10;7279:3;7275:20;7272:1;7265:31;7319:4;7316:1;7309:15;7347:4;7344:1;7337:15;7201:161;;6988:380;;;:::o;7499:545::-;7601:2;7596:3;7593:11;7590:448;;;7637:1;7662:5;7658:2;7651:17;7707:4;7703:2;7693:19;7777:2;7765:10;7761:19;7758:1;7754:27;7748:4;7744:38;7813:4;7801:10;7798:20;7795:47;;;-1:-1:-1;7836:4:42;7795:47;7891:2;7886:3;7882:12;7879:1;7875:20;7869:4;7865:31;7855:41;;7946:82;7964:2;7957:5;7954:13;7946:82;;;8009:17;;;7990:1;7979:13;7946:82;;;7950:3;;;7499:545;;;:::o;8220:1352::-;8346:3;8340:10;8373:18;8365:6;8362:30;8359:56;;;8395:18;;:::i;:::-;8424:97;8514:6;8474:38;8506:4;8500:11;8474:38;:::i;:::-;8468:4;8424:97;:::i;:::-;8576:4;;8640:2;8629:14;;8657:1;8652:663;;;;9359:1;9376:6;9373:89;;;-1:-1:-1;9428:19:42;;;9422:26;9373:89;-1:-1:-1;;8177:1:42;8173:11;;;8169:24;8165:29;8155:40;8201:1;8197:11;;;8152:57;9475:81;;8622:944;;8652:663;7446:1;7439:14;;;7483:4;7470:18;;-1:-1:-1;;8688:20:42;;;8806:236;8820:7;8817:1;8814:14;8806:236;;;8909:19;;;8903:26;8888:42;;9001:27;;;;8969:1;8957:14;;;;8836:19;;8806:236;;;8810:3;9070:6;9061:7;9058:19;9055:201;;;9131:19;;;9125:26;-1:-1:-1;;9214:1:42;9210:14;;;9226:3;9206:24;9202:37;9198:42;9183:58;9168:74;;9055:201;-1:-1:-1;;;;;9302:1:42;9286:14;;;9282:22;9269:36;;-1:-1:-1;8220:1352:42:o;9577:317::-;-1:-1:-1;;;;;9754:32:42;;9736:51;;9823:2;9818;9803:18;;9796:30;;;-1:-1:-1;;9843:45:42;;9869:18;;9861:6;9843:45;:::i;12046:184::-;12116:6;12169:2;12157:9;12148:7;12144:23;12140:32;12137:52;;;12185:1;12182;12175:12;12137:52;-1:-1:-1;12208:16:42;;12046:184;-1:-1:-1;12046:184:42:o;13405:407::-;13607:2;13589:21;;;13646:2;13626:18;;;13619:30;13685:34;13680:2;13665:18;;13658:62;-1:-1:-1;;;13751:2:42;13736:18;;13729:41;13802:3;13787:19;;13405:407::o;14580:287::-;14709:3;14747:6;14741:13;14763:66;14822:6;14817:3;14810:4;14802:6;14798:17;14763:66;:::i;:::-;14845:16;;;;;14580:287;-1:-1:-1;;14580:287:42:o",
    "linkReferences": {},
    "immutableReferences": {
      "43294": [
        {
          "start": 925,
          "length": 32
        },
        {
          "start": 998,
          "length": 32
        },
        {
          "start": 1193,
          "length": 32
        },
        {
          "start": 1257,
          "length": 32
        },
        {
          "start": 1404,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "getBalance()": "12065fe0",
    "getMarquee()": "6cc728db",
    "getPrice()": "98d5fdca",
    "initialize()": "8129fc1c",
    "maxLenMarquee()": "3544b52b",
    "minValue()": "963e63c7",
    "owner()": "8da5cb5b",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "proxiableUUID()": "52d1902d",
    "renounceOwnership()": "715018a6",
    "setMarquee(string)": "55b64f20",
    "transferOwnership(address)": "f2fde38b",
    "unpause()": "3f4ba83a",
    "updateMaxLenMarquee(uint256)": "11bb3bb4",
    "updateMinValue(uint256)": "58f6c231",
    "updatePrice(uint256)": "8d6cc56d",
    "upgradeTo(address)": "3659cfe6",
    "upgradeToAndCall(address,bytes)": "4f1ef286",
    "version()": "54fd4d50",
    "withdraw()": "3ccfd60b",
    "withdrawTo(address)": "72b0d90c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"marquee\",\"type\":\"string\"}],\"name\":\"SetMarquee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarquee\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLenMarquee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newMarquee\",\"type\":\"string\"}],\"name\":\"setMarquee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxLenMarquee\",\"type\":\"uint256\"}],\"name\":\"updateMaxLenMarquee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMinValue\",\"type\":\"uint256\"}],\"name\":\"updateMinValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"updatePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"getBalance()\":{\"details\":\"Retrieves the contract balance.\",\"returns\":{\"_0\":\"The current balance of the contract.\"}},\"getMarquee()\":{\"details\":\"Retrieves the current marquee message. Requires the contract to be not paused.\",\"returns\":{\"_0\":\"The current marquee message.\"}},\"getPrice()\":{\"details\":\"Retrieves the current price for setting the marquee.\",\"returns\":{\"_0\":\"The current price in wei.\"}},\"initialize()\":{\"details\":\"Initializes the contract with default values.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Pauses the contract. Requires the sender to be the contract owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setMarquee(string)\":{\"details\":\"Sets the marquee message. Emits a SetMarquee event when successful. Requires payment equal to or greater than the current price. Rejects messages that exceed the maximum length or insufficient payment.\",\"params\":{\"newMarquee\":\"The new marquee message to set.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Unpauses the contract. Requires the sender to be the contract owner.\"},\"updateMaxLenMarquee(uint256)\":{\"details\":\"Updates the maximum length of the marquee message. Requires the sender to be the contract owner.\",\"params\":{\"newMaxLenMarquee\":\"The new maximum length to set.\"}},\"updateMinValue(uint256)\":{\"details\":\"Updates the minimum payment required. Requires the sender to be the contract owner.\",\"params\":{\"newMinValue\":\"The new minimum payment value to set.\"}},\"updatePrice(uint256)\":{\"details\":\"Updates the price for setting the marquee. Requires the sender to be the contract owner.\",\"params\":{\"newPrice\":\"The new price to set.\"}},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"withdraw()\":{\"details\":\"Withdraws the contract balance to the owner's address.\"},\"withdrawTo(address)\":{\"details\":\"Withdraws the contract balance to the specified address. Requires the target address to be non-zero.\",\"params\":{\"to\":\"The address to withdraw the balance to.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Marquee.sol\":\"Marquee\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-upgrades/=lib/openzeppelin-upgrades/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159\",\"dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d\",\"dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"src/Marquee.sol\":{\"keccak256\":\"0x8bc6f0acd6aeae090b04469b8db4cac5818aeb5520d3d51fce52cdbaa6415cc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://caeffefa86245de6ccc3a7da58ef8f95f9f77de62d06cb03994efc204292f359\",\"dweb:/ipfs/QmSUGiEz3gXZGpPAfisWNqrMP6cDpQyxKee4Pof8iyFbGL\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "beacon",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BeaconUpgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "marquee",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetMarquee",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getMarquee",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxLenMarquee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minValue",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "newMarquee",
              "type": "string"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "setMarquee"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newMaxLenMarquee",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateMaxLenMarquee"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newMinValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateMinValue"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updatePrice"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTo"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getBalance()": {
            "details": "Retrieves the contract balance.",
            "returns": {
              "_0": "The current balance of the contract."
            }
          },
          "getMarquee()": {
            "details": "Retrieves the current marquee message. Requires the contract to be not paused.",
            "returns": {
              "_0": "The current marquee message."
            }
          },
          "getPrice()": {
            "details": "Retrieves the current price for setting the marquee.",
            "returns": {
              "_0": "The current price in wei."
            }
          },
          "initialize()": {
            "details": "Initializes the contract with default values."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pause()": {
            "details": "Pauses the contract. Requires the sender to be the contract owner."
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "proxiableUUID()": {
            "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "setMarquee(string)": {
            "details": "Sets the marquee message. Emits a SetMarquee event when successful. Requires payment equal to or greater than the current price. Rejects messages that exceed the maximum length or insufficient payment.",
            "params": {
              "newMarquee": "The new marquee message to set."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "unpause()": {
            "details": "Unpauses the contract. Requires the sender to be the contract owner."
          },
          "updateMaxLenMarquee(uint256)": {
            "details": "Updates the maximum length of the marquee message. Requires the sender to be the contract owner.",
            "params": {
              "newMaxLenMarquee": "The new maximum length to set."
            }
          },
          "updateMinValue(uint256)": {
            "details": "Updates the minimum payment required. Requires the sender to be the contract owner.",
            "params": {
              "newMinValue": "The new minimum payment value to set."
            }
          },
          "updatePrice(uint256)": {
            "details": "Updates the price for setting the marquee. Requires the sender to be the contract owner.",
            "params": {
              "newPrice": "The new price to set."
            }
          },
          "upgradeTo(address)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "upgradeToAndCall(address,bytes)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "withdraw()": {
            "details": "Withdraws the contract balance to the owner's address."
          },
          "withdrawTo(address)": {
            "details": "Withdraws the contract balance to the specified address. Requires the target address to be non-zero.",
            "params": {
              "to": "The address to withdraw the balance to."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin-upgrades/=lib/openzeppelin-upgrades/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Marquee.sol": "Marquee"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC1967Upgradeable.sol": {
        "keccak256": "0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b",
        "urls": [
          "bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0",
          "dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol": {
        "keccak256": "0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f",
        "urls": [
          "bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053",
          "dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
        "keccak256": "0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161",
        "urls": [
          "bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159",
          "dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol": {
        "keccak256": "0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908",
        "urls": [
          "bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1",
          "dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad",
        "urls": [
          "bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d",
          "dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol": {
        "keccak256": "0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250",
        "urls": [
          "bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad",
          "dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol": {
        "keccak256": "0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908",
        "urls": [
          "bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685",
          "dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy"
        ],
        "license": "MIT"
      },
      "src/Marquee.sol": {
        "keccak256": "0x8bc6f0acd6aeae090b04469b8db4cac5818aeb5520d3d51fce52cdbaa6415cc1",
        "urls": [
          "bzz-raw://caeffefa86245de6ccc3a7da58ef8f95f9f77de62d06cb03994efc204292f359",
          "dweb:/ipfs/QmSUGiEz3gXZGpPAfisWNqrMP6cDpQyxKee4Pof8iyFbGL"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Marquee.sol",
    "id": 45321,
    "exportedSymbols": {
      "AddressUpgradeable": [
        43856
      ],
      "ContextUpgradeable": [
        43898
      ],
      "ERC1967UpgradeUpgradeable": [
        43084
      ],
      "IBeaconUpgradeable": [
        43094
      ],
      "IERC1822ProxiableUpgradeable": [
        42760
      ],
      "IERC1967Upgradeable": [
        42750
      ],
      "Initializable": [
        43263
      ],
      "Marquee": [
        45320
      ],
      "OwnableUpgradeable": [
        42729
      ],
      "PausableUpgradeable": [
        43526
      ],
      "StorageSlotUpgradeable": [
        44008
      ],
      "UUPSUpgradeable": [
        43399
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:5498:40",
    "nodes": [
      {
        "id": 45013,
        "nodeType": "PragmaDirective",
        "src": "0:24:40",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 45014,
        "nodeType": "ImportDirective",
        "src": "58:84:40",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "file": "openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45321,
        "sourceUnit": 43264,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45015,
        "nodeType": "ImportDirective",
        "src": "143:86:40",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45321,
        "sourceUnit": 43400,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45016,
        "nodeType": "ImportDirective",
        "src": "230:87:40",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45321,
        "sourceUnit": 43527,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45017,
        "nodeType": "ImportDirective",
        "src": "319:84:40",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45321,
        "sourceUnit": 42730,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45320,
        "nodeType": "ContractDefinition",
        "src": "405:5092:40",
        "nodes": [
          {
            "id": 45027,
            "nodeType": "VariableDeclaration",
            "src": "503:22:40",
            "nodes": [],
            "constant": false,
            "functionSelector": "54fd4d50",
            "mutability": "mutable",
            "name": "version",
            "nameLocation": "518:7:40",
            "scope": 45320,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 45026,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "503:7:40",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45029,
            "nodeType": "VariableDeclaration",
            "src": "552:23:40",
            "nodes": [],
            "constant": false,
            "functionSelector": "963e63c7",
            "mutability": "mutable",
            "name": "minValue",
            "nameLocation": "567:8:40",
            "scope": 45320,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 45028,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "552:7:40",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45031,
            "nodeType": "VariableDeclaration",
            "src": "609:21:40",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "price",
            "nameLocation": "625:5:40",
            "scope": 45320,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 45030,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "609:7:40",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 45033,
            "nodeType": "VariableDeclaration",
            "src": "678:28:40",
            "nodes": [],
            "constant": false,
            "functionSelector": "3544b52b",
            "mutability": "mutable",
            "name": "maxLenMarquee",
            "nameLocation": "693:13:40",
            "scope": 45320,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 45032,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "678:7:40",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45035,
            "nodeType": "VariableDeclaration",
            "src": "753:22:40",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "marquee",
            "nameLocation": "768:7:40",
            "scope": 45320,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 45034,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "753:6:40",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "id": 45041,
            "nodeType": "EventDefinition",
            "src": "805:49:40",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "1e946919e9e9cfdbd2d6ed88c52f8e3410b63fd8ee93b3fbc70a1eb1e51819e4",
            "name": "SetMarquee",
            "nameLocation": "811:10:40",
            "parameters": {
              "id": 45040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45037,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "830:6:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 45041,
                  "src": "822:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45036,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "822:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45039,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "marquee",
                  "nameLocation": "845:7:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 45041,
                  "src": "838:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 45038,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "838:6:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "821:32:40"
            }
          },
          {
            "id": 45048,
            "nodeType": "FunctionDefinition",
            "src": "897:53:40",
            "nodes": [],
            "body": {
              "id": 45047,
              "nodeType": "Block",
              "src": "911:39:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 45044,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43244,
                      "src": "921:20:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 45045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "921:22:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45046,
                  "nodeType": "ExpressionStatement",
                  "src": "921:22:40"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 45042,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "908:2:40"
            },
            "returnParameters": {
              "id": 45043,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "911:0:40"
            },
            "scope": 45320,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45084,
            "nodeType": "FunctionDefinition",
            "src": "1030:339:40",
            "nodes": [],
            "body": {
              "id": 45083,
              "nodeType": "Block",
              "src": "1071:298:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 45054,
                      "name": "__Pausable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43430,
                      "src": "1081:15:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 45055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1081:17:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45056,
                  "nodeType": "ExpressionStatement",
                  "src": "1081:17:40"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 45057,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42624,
                      "src": "1108:14:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 45058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1108:16:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45059,
                  "nodeType": "ExpressionStatement",
                  "src": "1108:16:40"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 45060,
                      "name": "__UUPSUpgradeable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43281,
                      "src": "1134:22:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 45061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1134:24:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45062,
                  "nodeType": "ExpressionStatement",
                  "src": "1134:24:40"
                },
                {
                  "expression": {
                    "id": 45065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45063,
                      "name": "version",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45027,
                      "src": "1169:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 45064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1179:1:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1169:11:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45066,
                  "nodeType": "ExpressionStatement",
                  "src": "1169:11:40"
                },
                {
                  "expression": {
                    "id": 45069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45067,
                      "name": "minValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45029,
                      "src": "1190:8:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 45068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1201:7:40",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1190:18:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45070,
                  "nodeType": "ExpressionStatement",
                  "src": "1190:18:40"
                },
                {
                  "expression": {
                    "id": 45073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45071,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45031,
                      "src": "1218:5:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "302e303031",
                      "id": 45072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1226:11:40",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000_by_1",
                        "typeString": "int_const 1000000000000000"
                      },
                      "value": "0.001"
                    },
                    "src": "1218:19:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45074,
                  "nodeType": "ExpressionStatement",
                  "src": "1218:19:40"
                },
                {
                  "expression": {
                    "id": 45077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45075,
                      "name": "marquee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45035,
                      "src": "1247:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "666f7220746865206c6f7665206f66207361746f73686920706c65617365206a75737420776f726b2064616d6d6974",
                      "id": 45076,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1257:49:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_2dbc4fb41772c8278c199b74b32a45d941847dbeefc3865630e5e6ff4e491fe7",
                        "typeString": "literal_string \"for the love of satoshi please just work dammit\""
                      },
                      "value": "for the love of satoshi please just work dammit"
                    },
                    "src": "1247:59:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 45078,
                  "nodeType": "ExpressionStatement",
                  "src": "1247:59:40"
                },
                {
                  "expression": {
                    "id": 45081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45079,
                      "name": "maxLenMarquee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45033,
                      "src": "1343:13:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "323030",
                      "id": 45080,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1359:3:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_200_by_1",
                        "typeString": "int_const 200"
                      },
                      "value": "200"
                    },
                    "src": "1343:19:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45082,
                  "nodeType": "ExpressionStatement",
                  "src": "1343:19:40"
                }
              ]
            },
            "documentation": {
              "id": 45049,
              "nodeType": "StructuredDocumentation",
              "src": "956:69:40",
              "text": " @dev Initializes the contract with default values."
            },
            "functionSelector": "8129fc1c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 45052,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 45051,
                  "name": "initializer",
                  "nameLocations": [
                    "1059:11:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43165,
                  "src": "1059:11:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "1059:11:40"
              }
            ],
            "name": "initialize",
            "nameLocation": "1039:10:40",
            "parameters": {
              "id": 45050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1049:2:40"
            },
            "returnParameters": {
              "id": 45053,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1071:0:40"
            },
            "scope": 45320,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45147,
            "nodeType": "FunctionDefinition",
            "src": "1683:567:40",
            "nodes": [],
            "body": {
              "id": 45146,
              "nodeType": "Block",
              "src": "1760:490:40",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    45093
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45093,
                      "mutability": "mutable",
                      "name": "currentPrice",
                      "nameLocation": "1778:12:40",
                      "nodeType": "VariableDeclaration",
                      "scope": 45146,
                      "src": "1770:20:40",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45092,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1770:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45096,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 45094,
                      "name": "getPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45319,
                      "src": "1793:8:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 45095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1793:10:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1770:33:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 45101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 45098,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1821:3:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 45099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1825:5:40",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1821:9:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 45100,
                          "name": "currentPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45093,
                          "src": "1834:12:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1821:25:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5b4d30315d20596f75206469646e27742070617920656e6f756768",
                        "id": 45102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1848:29:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72898fcbcc4264d4b11196f72aeefe4d57b55f699d89cb1a4299f2bc98daf51d",
                          "typeString": "literal_string \"[M01] You didn't pay enough\""
                        },
                        "value": "[M01] You didn't pay enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_72898fcbcc4264d4b11196f72aeefe4d57b55f699d89cb1a4299f2bc98daf51d",
                          "typeString": "literal_string \"[M01] You didn't pay enough\""
                        }
                      ],
                      "id": 45097,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1813:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 45103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1813:65:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45104,
                  "nodeType": "ExpressionStatement",
                  "src": "1813:65:40"
                },
                {
                  "assignments": [
                    45106
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45106,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "1894:7:40",
                      "nodeType": "VariableDeclaration",
                      "scope": 45146,
                      "src": "1889:12:40",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 45105,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1889:4:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45110,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 45108,
                        "name": "newMarquee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45087,
                        "src": "1919:10:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 45107,
                      "name": "_checkLenLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45175,
                      "src": "1904:14:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (string memory) view returns (bool)"
                      }
                    },
                    "id": 45109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1904:26:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1889:41:40"
                },
                {
                  "condition": {
                    "id": 45112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1944:8:40",
                    "subExpression": {
                      "id": 45111,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45106,
                      "src": "1945:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45135,
                  "nodeType": "IfStatement",
                  "src": "1940:224:40",
                  "trueBody": {
                    "id": 45134,
                    "nodeType": "Block",
                    "src": "1954:210:40",
                    "statements": [
                      {
                        "assignments": [
                          45114,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 45114,
                            "mutability": "mutable",
                            "name": "sent",
                            "nameLocation": "1974:4:40",
                            "nodeType": "VariableDeclaration",
                            "scope": 45134,
                            "src": "1969:9:40",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 45113,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1969:4:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 45124,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 45122,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2031:2:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 45115,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1983:3:40",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 45116,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1987:6:40",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1983:10:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 45117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1994:4:40",
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "1983:15:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 45121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 45120,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 45118,
                                  "name": "currentPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45093,
                                  "src": "2006:12:40",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 45119,
                                  "name": "minValue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45029,
                                  "src": "2021:8:40",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2006:23:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "1983:47:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 45123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1983:51:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1968:66:40"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 45126,
                              "name": "sent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45114,
                              "src": "2056:4:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5b4d30325d204661696c656420746f2073656e642076616c7565206261636b",
                              "id": 45127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2062:33:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_510770b9aa0c8e7a1b0e1ba33150882d56bbada6ea0d978c4ba257b5698aa288",
                                "typeString": "literal_string \"[M02] Failed to send value back\""
                              },
                              "value": "[M02] Failed to send value back"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_510770b9aa0c8e7a1b0e1ba33150882d56bbada6ea0d978c4ba257b5698aa288",
                                "typeString": "literal_string \"[M02] Failed to send value back\""
                              }
                            ],
                            "id": 45125,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2048:7:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 45128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2048:48:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 45129,
                        "nodeType": "ExpressionStatement",
                        "src": "2048:48:40"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "5b4d30335d20596f7572206d657373616765206973206e6f7420616c6c6f776564",
                              "id": 45131,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2117:35:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9994ae3ac138647578738882f172e04c8252148b6cea0ab2c6474e3b8166a93c",
                                "typeString": "literal_string \"[M03] Your message is not allowed\""
                              },
                              "value": "[M03] Your message is not allowed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_9994ae3ac138647578738882f172e04c8252148b6cea0ab2c6474e3b8166a93c",
                                "typeString": "literal_string \"[M03] Your message is not allowed\""
                              }
                            ],
                            "id": 45130,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "2110:6:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 45132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2110:43:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 45133,
                        "nodeType": "ExpressionStatement",
                        "src": "2110:43:40"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 45138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45136,
                      "name": "marquee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45035,
                      "src": "2174:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 45137,
                      "name": "newMarquee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45087,
                      "src": "2184:10:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2174:20:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 45139,
                  "nodeType": "ExpressionStatement",
                  "src": "2174:20:40"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 45141,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2220:3:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 45142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2224:6:40",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2220:10:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45143,
                        "name": "newMarquee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45087,
                        "src": "2232:10:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 45140,
                      "name": "SetMarquee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45041,
                      "src": "2209:10:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 45144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2209:34:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45145,
                  "nodeType": "EmitStatement",
                  "src": "2204:39:40"
                }
              ]
            },
            "documentation": {
              "id": 45085,
              "nodeType": "StructuredDocumentation",
              "src": "1375:303:40",
              "text": " @dev Sets the marquee message.\n Emits a SetMarquee event when successful.\n Requires payment equal to or greater than the current price.\n Rejects messages that exceed the maximum length or insufficient payment.\n @param newMarquee The new marquee message to set."
            },
            "functionSelector": "55b64f20",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 45090,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 45089,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "1746:13:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43448,
                  "src": "1746:13:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "1746:13:40"
              }
            ],
            "name": "setMarquee",
            "nameLocation": "1692:10:40",
            "parameters": {
              "id": 45088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45087,
                  "mutability": "mutable",
                  "name": "newMarquee",
                  "nameLocation": "1717:10:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 45147,
                  "src": "1703:24:40",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 45086,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1703:6:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1702:26:40"
            },
            "returnParameters": {
              "id": 45091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1760:0:40"
            },
            "scope": 45320,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 45158,
            "nodeType": "FunctionDefinition",
            "src": "2414:103:40",
            "nodes": [],
            "body": {
              "id": 45157,
              "nodeType": "Block",
              "src": "2486:31:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 45155,
                    "name": "marquee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 45035,
                    "src": "2503:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 45154,
                  "id": 45156,
                  "nodeType": "Return",
                  "src": "2496:14:40"
                }
              ]
            },
            "documentation": {
              "id": 45148,
              "nodeType": "StructuredDocumentation",
              "src": "2256:153:40",
              "text": " @dev Retrieves the current marquee message.\n Requires the contract to be not paused.\n @return The current marquee message."
            },
            "functionSelector": "6cc728db",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 45151,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 45150,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "2448:13:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43448,
                  "src": "2448:13:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "2448:13:40"
              }
            ],
            "name": "getMarquee",
            "nameLocation": "2423:10:40",
            "parameters": {
              "id": 45149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2433:2:40"
            },
            "returnParameters": {
              "id": 45154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45153,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45158,
                  "src": "2471:13:40",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 45152,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2471:6:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2470:15:40"
            },
            "scope": 45320,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45175,
            "nodeType": "FunctionDefinition",
            "src": "2753:144:40",
            "nodes": [],
            "body": {
              "id": 45174,
              "nodeType": "Block",
              "src": "2832:65:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 45172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 45168,
                            "name": "newMarquee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45161,
                            "src": "2855:10:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 45167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2849:5:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 45166,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "2849:5:40",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2849:17:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 45170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2867:6:40",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2849:24:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 45171,
                      "name": "maxLenMarquee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45033,
                      "src": "2877:13:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2849:41:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 45165,
                  "id": 45173,
                  "nodeType": "Return",
                  "src": "2842:48:40"
                }
              ]
            },
            "documentation": {
              "id": 45159,
              "nodeType": "StructuredDocumentation",
              "src": "2523:225:40",
              "text": " @dev Checks if the length of the new marquee exceeds the maximum limit.\n @param newMarquee The new marquee message to check.\n @return A boolean indicating whether the length is within the limit."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkLenLimit",
            "nameLocation": "2762:14:40",
            "parameters": {
              "id": 45162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45161,
                  "mutability": "mutable",
                  "name": "newMarquee",
                  "nameLocation": "2791:10:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 45175,
                  "src": "2777:24:40",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 45160,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2777:6:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2776:26:40"
            },
            "returnParameters": {
              "id": 45165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45164,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45175,
                  "src": "2826:4:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 45163,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2826:4:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2825:6:40"
            },
            "scope": 45320,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 45188,
            "nodeType": "FunctionDefinition",
            "src": "3015:97:40",
            "nodes": [],
            "body": {
              "id": 45187,
              "nodeType": "Block",
              "src": "3067:45:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 45183,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "3092:4:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Marquee_$45320",
                            "typeString": "contract Marquee"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Marquee_$45320",
                            "typeString": "contract Marquee"
                          }
                        ],
                        "id": 45182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3084:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 45181,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3084:7:40",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 45184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3084:13:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 45185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3098:7:40",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "3084:21:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 45180,
                  "id": 45186,
                  "nodeType": "Return",
                  "src": "3077:28:40"
                }
              ]
            },
            "documentation": {
              "id": 45176,
              "nodeType": "StructuredDocumentation",
              "src": "2903:107:40",
              "text": " @dev Retrieves the contract balance.\n @return The current balance of the contract."
            },
            "functionSelector": "12065fe0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nameLocation": "3024:10:40",
            "parameters": {
              "id": 45177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3034:2:40"
            },
            "returnParameters": {
              "id": 45180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45179,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45188,
                  "src": "3058:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3058:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3057:9:40"
            },
            "scope": 45320,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45222,
            "nodeType": "FunctionDefinition",
            "src": "3311:254:40",
            "nodes": [],
            "body": {
              "id": 45221,
              "nodeType": "Block",
              "src": "3368:197:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 45202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 45197,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45191,
                          "src": "3386:2:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 45200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3400:1:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 45199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3392:7:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45198,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3392:7:40",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3392:10:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3386:16:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5b4d30345d2043616e6e6f7420776974686472617720746f207a65726f2061646472657373",
                        "id": 45203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3404:39:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96272bbe293761f7503e068ee720054468d7286d8a183910ecbbba9652bcdb74",
                          "typeString": "literal_string \"[M04] Cannot withdraw to zero address\""
                        },
                        "value": "[M04] Cannot withdraw to zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_96272bbe293761f7503e068ee720054468d7286d8a183910ecbbba9652bcdb74",
                          "typeString": "literal_string \"[M04] Cannot withdraw to zero address\""
                        }
                      ],
                      "id": 45196,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3378:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 45204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3378:66:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45205,
                  "nodeType": "ExpressionStatement",
                  "src": "3378:66:40"
                },
                {
                  "assignments": [
                    45207,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45207,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "3460:4:40",
                      "nodeType": "VariableDeclaration",
                      "scope": 45221,
                      "src": "3455:9:40",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 45206,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3455:4:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 45215,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 45213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3498:2:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 45208,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45191,
                          "src": "3469:2:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 45209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3472:4:40",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "3469:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 45212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 45210,
                            "name": "getBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45188,
                            "src": "3484:10:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 45211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3484:12:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "3469:28:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 45214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3469:32:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3454:47:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45217,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45207,
                        "src": "3519:4:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5b4d30355d204661696c656420746f207769746864726177204574686572",
                        "id": 45218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3525:32:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5fe52f62772fde6d0d48a67fbb542cf2cad90900ffdff21292cb832872b14c73",
                          "typeString": "literal_string \"[M05] Failed to withdraw Ether\""
                        },
                        "value": "[M05] Failed to withdraw Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5fe52f62772fde6d0d48a67fbb542cf2cad90900ffdff21292cb832872b14c73",
                          "typeString": "literal_string \"[M05] Failed to withdraw Ether\""
                        }
                      ],
                      "id": 45216,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3511:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 45219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3511:47:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45220,
                  "nodeType": "ExpressionStatement",
                  "src": "3511:47:40"
                }
              ]
            },
            "documentation": {
              "id": 45189,
              "nodeType": "StructuredDocumentation",
              "src": "3118:188:40",
              "text": " @dev Withdraws the contract balance to the specified address.\n Requires the target address to be non-zero.\n @param to The address to withdraw the balance to."
            },
            "functionSelector": "72b0d90c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 45194,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 45193,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3358:9:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42643,
                  "src": "3358:9:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "3358:9:40"
              }
            ],
            "name": "withdrawTo",
            "nameLocation": "3320:10:40",
            "parameters": {
              "id": 45192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45191,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3347:2:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 45222,
                  "src": "3331:18:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 45190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3331:15:40",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3330:20:40"
            },
            "returnParameters": {
              "id": 45195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3368:0:40"
            },
            "scope": 45320,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45241,
            "nodeType": "FunctionDefinition",
            "src": "3654:118:40",
            "nodes": [],
            "body": {
              "id": 45240,
              "nodeType": "Block",
              "src": "3691:81:40",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    45229
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45229,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "3717:2:40",
                      "nodeType": "VariableDeclaration",
                      "scope": 45240,
                      "src": "3701:18:40",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 45228,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3701:15:40",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45235,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 45232,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3730:3:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 45233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3734:6:40",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3730:10:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 45231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3722:8:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 45230,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3722:8:40",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 45234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3722:19:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3701:40:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45237,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45229,
                        "src": "3762:2:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 45236,
                      "name": "withdrawTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45222,
                      "src": "3751:10:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 45238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3751:14:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45239,
                  "nodeType": "ExpressionStatement",
                  "src": "3751:14:40"
                }
              ]
            },
            "documentation": {
              "id": 45223,
              "nodeType": "StructuredDocumentation",
              "src": "3571:78:40",
              "text": " @dev Withdraws the contract balance to the owner's address."
            },
            "functionSelector": "3ccfd60b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 45226,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 45225,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3681:9:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42643,
                  "src": "3681:9:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "3681:9:40"
              }
            ],
            "name": "withdraw",
            "nameLocation": "3663:8:40",
            "parameters": {
              "id": 45224,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3671:2:40"
            },
            "returnParameters": {
              "id": 45227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3691:0:40"
            },
            "scope": 45320,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45254,
            "nodeType": "FunctionDefinition",
            "src": "3947:91:40",
            "nodes": [],
            "body": {
              "id": 45253,
              "nodeType": "Block",
              "src": "4005:33:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 45251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45249,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45031,
                      "src": "4015:5:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 45250,
                      "name": "newPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45244,
                      "src": "4023:8:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4015:16:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45252,
                  "nodeType": "ExpressionStatement",
                  "src": "4015:16:40"
                }
              ]
            },
            "documentation": {
              "id": 45242,
              "nodeType": "StructuredDocumentation",
              "src": "3778:164:40",
              "text": " @dev Updates the price for setting the marquee.\n Requires the sender to be the contract owner.\n @param newPrice The new price to set."
            },
            "functionSelector": "8d6cc56d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 45247,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 45246,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3995:9:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42643,
                  "src": "3995:9:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "3995:9:40"
              }
            ],
            "name": "updatePrice",
            "nameLocation": "3956:11:40",
            "parameters": {
              "id": 45245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45244,
                  "mutability": "mutable",
                  "name": "newPrice",
                  "nameLocation": "3976:8:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 45254,
                  "src": "3968:16:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45243,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3968:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3967:18:40"
            },
            "returnParameters": {
              "id": 45248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4005:0:40"
            },
            "scope": 45320,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 45267,
            "nodeType": "FunctionDefinition",
            "src": "4227:103:40",
            "nodes": [],
            "body": {
              "id": 45266,
              "nodeType": "Block",
              "src": "4291:39:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 45264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45262,
                      "name": "minValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45029,
                      "src": "4301:8:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 45263,
                      "name": "newMinValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45257,
                      "src": "4312:11:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4301:22:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45265,
                  "nodeType": "ExpressionStatement",
                  "src": "4301:22:40"
                }
              ]
            },
            "documentation": {
              "id": 45255,
              "nodeType": "StructuredDocumentation",
              "src": "4044:178:40",
              "text": " @dev Updates the minimum payment required.\n Requires the sender to be the contract owner.\n @param newMinValue The new minimum payment value to set."
            },
            "functionSelector": "58f6c231",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 45260,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 45259,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4281:9:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42643,
                  "src": "4281:9:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "4281:9:40"
              }
            ],
            "name": "updateMinValue",
            "nameLocation": "4236:14:40",
            "parameters": {
              "id": 45258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45257,
                  "mutability": "mutable",
                  "name": "newMinValue",
                  "nameLocation": "4259:11:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 45267,
                  "src": "4251:19:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45256,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4251:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4250:21:40"
            },
            "returnParameters": {
              "id": 45261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4291:0:40"
            },
            "scope": 45320,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 45280,
            "nodeType": "FunctionDefinition",
            "src": "4530:123:40",
            "nodes": [],
            "body": {
              "id": 45279,
              "nodeType": "Block",
              "src": "4604:49:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 45277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45275,
                      "name": "maxLenMarquee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45033,
                      "src": "4614:13:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 45276,
                      "name": "newMaxLenMarquee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45270,
                      "src": "4630:16:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4614:32:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45278,
                  "nodeType": "ExpressionStatement",
                  "src": "4614:32:40"
                }
              ]
            },
            "documentation": {
              "id": 45268,
              "nodeType": "StructuredDocumentation",
              "src": "4336:189:40",
              "text": " @dev Updates the maximum length of the marquee message.\n Requires the sender to be the contract owner.\n @param newMaxLenMarquee The new maximum length to set."
            },
            "functionSelector": "11bb3bb4",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 45273,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 45272,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4594:9:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42643,
                  "src": "4594:9:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "4594:9:40"
              }
            ],
            "name": "updateMaxLenMarquee",
            "nameLocation": "4539:19:40",
            "parameters": {
              "id": 45271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45270,
                  "mutability": "mutable",
                  "name": "newMaxLenMarquee",
                  "nameLocation": "4567:16:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 45280,
                  "src": "4559:24:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45269,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4559:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4558:26:40"
            },
            "returnParameters": {
              "id": 45274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4604:0:40"
            },
            "scope": 45320,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 45290,
            "nodeType": "FunctionDefinition",
            "src": "4856:92:40",
            "nodes": [],
            "body": {
              "id": 45289,
              "nodeType": "Block",
              "src": "4946:2:40",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              43393
            ],
            "documentation": {
              "id": 45281,
              "nodeType": "StructuredDocumentation",
              "src": "4659:192:40",
              "text": " @dev Overrides the default upgrade authorization.\n Requires the sender to be the contract owner.\n @param newImplementation The address of the new implementation."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 45287,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 45286,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4936:9:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42643,
                  "src": "4936:9:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "4936:9:40"
              }
            ],
            "name": "_authorizeUpgrade",
            "nameLocation": "4865:17:40",
            "overrides": {
              "id": 45285,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4927:8:40"
            },
            "parameters": {
              "id": 45284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45283,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "4891:17:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 45290,
                  "src": "4883:25:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45282,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4883:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4882:27:40"
            },
            "returnParameters": {
              "id": 45288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4946:0:40"
            },
            "scope": 45320,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 45300,
            "nodeType": "FunctionDefinition",
            "src": "5056:59:40",
            "nodes": [],
            "body": {
              "id": 45299,
              "nodeType": "Block",
              "src": "5090:25:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 45296,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43504,
                      "src": "5100:6:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 45297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5100:8:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45298,
                  "nodeType": "ExpressionStatement",
                  "src": "5100:8:40"
                }
              ]
            },
            "documentation": {
              "id": 45291,
              "nodeType": "StructuredDocumentation",
              "src": "4954:97:40",
              "text": " @dev Pauses the contract.\n Requires the sender to be the contract owner."
            },
            "functionSelector": "8456cb59",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 45294,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 45293,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5080:9:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42643,
                  "src": "5080:9:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "5080:9:40"
              }
            ],
            "name": "pause",
            "nameLocation": "5065:5:40",
            "parameters": {
              "id": 45292,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5070:2:40"
            },
            "returnParameters": {
              "id": 45295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5090:0:40"
            },
            "scope": 45320,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45310,
            "nodeType": "FunctionDefinition",
            "src": "5225:63:40",
            "nodes": [],
            "body": {
              "id": 45309,
              "nodeType": "Block",
              "src": "5261:27:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 45306,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43520,
                      "src": "5271:8:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 45307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5271:10:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45308,
                  "nodeType": "ExpressionStatement",
                  "src": "5271:10:40"
                }
              ]
            },
            "documentation": {
              "id": 45301,
              "nodeType": "StructuredDocumentation",
              "src": "5121:99:40",
              "text": " @dev Unpauses the contract.\n Requires the sender to be the contract owner."
            },
            "functionSelector": "3f4ba83a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 45304,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 45303,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5251:9:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42643,
                  "src": "5251:9:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "5251:9:40"
              }
            ],
            "name": "unpause",
            "nameLocation": "5234:7:40",
            "parameters": {
              "id": 45302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5241:2:40"
            },
            "returnParameters": {
              "id": 45305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5261:0:40"
            },
            "scope": 45320,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45319,
            "nodeType": "FunctionDefinition",
            "src": "5416:79:40",
            "nodes": [],
            "body": {
              "id": 45318,
              "nodeType": "Block",
              "src": "5466:29:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 45316,
                    "name": "price",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 45031,
                    "src": "5483:5:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 45315,
                  "id": 45317,
                  "nodeType": "Return",
                  "src": "5476:12:40"
                }
              ]
            },
            "documentation": {
              "id": 45311,
              "nodeType": "StructuredDocumentation",
              "src": "5294:117:40",
              "text": " @dev Retrieves the current price for setting the marquee.\n @return The current price in wei."
            },
            "functionSelector": "98d5fdca",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPrice",
            "nameLocation": "5425:8:40",
            "parameters": {
              "id": 45312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5433:2:40"
            },
            "returnParameters": {
              "id": 45315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45314,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45319,
                  "src": "5457:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45313,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5457:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5456:9:40"
            },
            "scope": 45320,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 45018,
              "name": "Initializable",
              "nameLocations": [
                "425:13:40"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43263,
              "src": "425:13:40"
            },
            "id": 45019,
            "nodeType": "InheritanceSpecifier",
            "src": "425:13:40"
          },
          {
            "baseName": {
              "id": 45020,
              "name": "PausableUpgradeable",
              "nameLocations": [
                "440:19:40"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43526,
              "src": "440:19:40"
            },
            "id": 45021,
            "nodeType": "InheritanceSpecifier",
            "src": "440:19:40"
          },
          {
            "baseName": {
              "id": 45022,
              "name": "OwnableUpgradeable",
              "nameLocations": [
                "461:18:40"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42729,
              "src": "461:18:40"
            },
            "id": 45023,
            "nodeType": "InheritanceSpecifier",
            "src": "461:18:40"
          },
          {
            "baseName": {
              "id": 45024,
              "name": "UUPSUpgradeable",
              "nameLocations": [
                "481:15:40"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43399,
              "src": "481:15:40"
            },
            "id": 45025,
            "nodeType": "InheritanceSpecifier",
            "src": "481:15:40"
          }
        ],
        "canonicalName": "Marquee",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          45320,
          43399,
          43084,
          42750,
          42760,
          42729,
          43526,
          43898,
          43263
        ],
        "name": "Marquee",
        "nameLocation": "414:7:40",
        "scope": 45321,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 40
}